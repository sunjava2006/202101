<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wangrui.bbt.beans.User">
  <cache eviction="LRU" size="100" flushInterval="1800000" readOnly="false"></cache>
  <resultMap type="User" id="userResultMapper">
      <id column="user_id" property="userID" />
      <result column="reg_name" property="regName"/>
      <result column="pwd" property="pwd"/>
      <result column="bank_account" property="bankAccount"/>
      <result column="real_name" property="name"/>
  </resultMap>
  
  <resultMap type="User" id="userResultWithOrdersMapper">
      <id column="user_id" property="userID" ></id>
      <result column="reg_name" property="regName"/>
      <result column="pwd" property="pwd"/>
      <result column="bank_account" property="bankAccount"/>
      <result column="real_name" property="name"/>
      <collection property="orders" javaType="list" ofType="Order">
          <id column="order_id" property="orderID"/>
	      <result column="user_id" property="userID"/>
	      <result column="order_date" property="orderDate"/>
	      <result column="status" property="status"/>
      </collection>
  </resultMap>
  
  <resultMap type="User" id="userResultWithOrdersMapper2">
      <id column="user_id" property="userID" ></id>
      <result column="reg_name" property="regName"/>
      <result column="pwd" property="pwd"/>
      <result column="bank_account" property="bankAccount"/>
      <result column="real_name" property="name"/>
      <collection property="orders" javaType="list" ofType="Order" column="user_id" 
      select="com.wangrui.bbt.beans.Order.selectByUserID">
<!--           <id column="order_id" property="orderID"/> -->
<!-- 	      <result column="user_id" property="userID"/> -->
<!-- 	      <result column="order_date" property="orderDate"/> -->
<!-- 	      <result column="status" property="status"/> -->
      </collection>
  </resultMap>
  

<select id="selectByUserIdWithOrders" parameterType="int" 
resultMap="userResultWithOrdersMapper2" useCache="true">
  select * from t_users  where user_id=#{id}
</select>  

<select id="selectByRegName" parameterType="string" resultType="map">
    select * from t_users where reg_name=#{regName}
 </select>
 
 <select id="login" parameterType="map" resultMap="userResultMapper">
    select * from t_users where reg_name=#{regName} and pwd= #{pwd}
 </select>

 <insert id="add" parameterType="User" >
    insert into t_users(user_id, reg_name, pwd, bank_account, real_name)
    values(seq_users.nextval, #{regName,jdbcType=VARCHAR, javaType=String}, #{pwd, jdbcType=VARCHAR, javaType=String}, #{bankAccount, jdbcType=VARCHAR, javaType=String }, #{name, jdbcType=VARCHAR, javaType=String} )
 </insert>

 <select id="list" parameterType="map" resultMap="userResultMapper">
     select * from(
     select a.*, rownum ro from t_users a where rownum &lt;=${page*size})
     where ro &gt;${(page-1)*size}
 </select>
 
 <delete id="deleteByID" parameterType="int">
    delete from t_users where user_id=#{a}
 </delete>
 
 
 <select id="groupByGender" resultType="map">
     select gender, count(*) gender_count from t_users group by gender
 </select>
 
 <select id="totalCount" resultType="int">
     select count(*) from t_users
 </select>
 
 <update id="updatePwd" parameterType="User" >
    update t_users set pwd=#{pwd} where user_id=#{userID}
 </update>
 
 <select id="selectByExample" parameterType="User" resultMap="userResultMapper">
     select * from t_users
     <where>
        <choose>
            <when test="regName!=null">
                reg_name=#{regName}
            </when>
            <when test="bankAccount!=null">
                bank_account=#{bankAccount}
            </when>
            <otherwise>
                <if test="name!=null">
                    real_name = #{name}
                </if>
            </otherwise>
        </choose>
        
        
     </where>
 </select>
  
  <update id="updateByExample" parameterType="User">
     update t_users
     <set>
         <if test="name!=null">
            real_name=#{name},
         </if>
         <if test="bankAccount!=null">
            bank_account=#{bankAccount},
         </if>
         <if test="pwd!=null">
            pwd = #{pwd}
         </if>
     </set>
     <where>
         <choose>
	         <when test="userID!=null">
	             user_id=#{userID}
	         </when>
	         <otherwise>
	            1=2
	         </otherwise>
         </choose>
         
     </where>
  </update>

</mapper>
